class Solution {
  public:    
    void dfsRec(vector<vector<int>> &adj, vector<bool> &visited, int s, vector<int> &res) {
        visited[s] = true;
        res.push_back(s);
    
        for (int i : adj[s]) {
            if (!visited[i])
                dfsRec(adj, visited, i, res);
        }
    }
    
    vector<int> dfs(vector<vector<int>> &adj) {
        int V = adj.size();
        vector<bool> visited(V, false);
        vector<int> res;
    
        for (int i = 0; i < V; i++) {  // Loop to handle disconnected graphs
            if (!visited[i])
                dfsRec(adj, visited, i, res);
        }
    
        return res;
    }

};
